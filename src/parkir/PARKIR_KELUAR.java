/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parkir;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.io.File;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.HashMap;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;

/**
 *
 * @author DFN COMPUTER
 */
public class PARKIR_KELUAR extends javax.swing.JFrame {
    private final DefaultTableModel tabel;
    private Connection Con;
    private Statement stm;
    public Statement stt;
    public java.sql.Connection con;
    private TableColumn column;
    koneksi konek = new koneksi();
    /**
     * Creates new form PARKIR_KELUAR
     */
    public PARKIR_KELUAR(java.awt.Frame parent, boolean modal) {
        konek.koneksi();
        initComponents();
        String[] judul={"NO TIKET","NO POLISI","JENIS KENDARAAN","TANGGAL MASUK","WAKTU MASUK","TANGGAL KELUAR","JAM KELUAR","DURASI HARI","DURASI JAM","BIAYA PARKIR","BIAYA TOTAL"};
        tabel = new DefaultTableModel(judul,0);
        jTable1.setModel(tabel);
        tampilkan_data();
        aturKolom();
        penomoran_otomatis();
        nopol.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblbiaya = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNotiket = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nopol = new javax.swing.JTextField();
        jenis = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tglmasuk = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jammasuk = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        durasihari = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        durasijam = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        biayaparkir = new javax.swing.JTextField();
        biayatotal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        CLEAR = new javax.swing.JButton();
        CARI = new javax.swing.JButton();
        cetak = new javax.swing.JButton();
        KELUAR = new javax.swing.JButton();
        DELETE = new javax.swing.JButton();
        CLOSE = new javax.swing.JButton();

        lblbiaya.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("PARKIR KELUAR");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("No Tiket");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        txtNotiket.setEditable(false);
        txtNotiket.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        getContentPane().add(txtNotiket, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 230, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("No Pol");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        nopol.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        getContentPane().add(nopol, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 230, -1));

        jenis.setEditable(false);
        jenis.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        getContentPane().add(jenis, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 230, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Jenis Kendaraan");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Tgl Masuk");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, -1));

        tglmasuk.setEditable(false);
        tglmasuk.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        getContentPane().add(tglmasuk, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 130, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("Jam Masuk");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, -1, -1));

        jammasuk.setEditable(false);
        jammasuk.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        getContentPane().add(jammasuk, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 210, 130, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Durasi Hari");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, -1, -1));

        durasihari.setEditable(false);
        durasihari.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        getContentPane().add(durasihari, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 130, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setText("Durasi Jam");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, -1, -1));

        durasijam.setEditable(false);
        durasijam.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        getContentPane().add(durasijam, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, 130, -1));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("Biaya Parkir");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, -1, -1));

        biayaparkir.setEditable(false);
        biayaparkir.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        getContentPane().add(biayaparkir, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 130, -1));

        biayatotal.setEditable(false);
        biayatotal.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        getContentPane().add(biayatotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 290, 130, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setText("Biaya Total");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 290, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 600, 170));

        CLEAR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        CLEAR.setText("BERSIHKAN");
        CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEARActionPerformed(evt);
            }
        });
        getContentPane().add(CLEAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 350, 120, 40));

        CARI.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        CARI.setText("CARI");
        CARI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CARIActionPerformed(evt);
            }
        });
        getContentPane().add(CARI, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, 100, 40));

        cetak.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cetak.setText("CETAK KARCIS");
        cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetakActionPerformed(evt);
            }
        });
        getContentPane().add(cetak, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 350, 160, 40));

        KELUAR.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        KELUAR.setText("PARKIR KELUAR");
        KELUAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KELUARActionPerformed(evt);
            }
        });
        getContentPane().add(KELUAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 160, 40));

        DELETE.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DELETE.setText("DELETE");
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });
        getContentPane().add(DELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, 100, 40));

        CLOSE.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        CLOSE.setText("CLOSE");
        CLOSE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLOSEActionPerformed(evt);
            }
        });
        getContentPane().add(CLOSE, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 350, 100, 40));

        setSize(new java.awt.Dimension(657, 638));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CARIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CARIActionPerformed
        // TODO add your handling code here:
        if(nopol.getText().isEmpty())
        JOptionPane.showMessageDialog(this, "No. Pol masih kosong!");
        else {
            DecimalFormat rupiah = (DecimalFormat) DecimalFormat.getCurrencyInstance();
            DecimalFormatSymbols formatRp = new DecimalFormatSymbols();
            formatRp.setCurrencySymbol("Rp ");
            formatRp.setMonetaryDecimalSeparator(',');
            formatRp.setGroupingSeparator('.');
            rupiah.setDecimalFormatSymbols(formatRp);

            String sql = "SELECT *, DATEDIFF(CURDATE(), tgl_masuk) durasi_hari, (TIME_FORMAT(CURTIME(),'%H')-TIME_FORMAT(jam_masuk, '%H')) durasi_jam "
            + "FROM PARKIR_MASUK WHERE no_pol='"+nopol.getText()+"'";
            try
            {
                konek.st = konek.conn.createStatement();
                konek.rs = konek.st.executeQuery(sql);
            } catch (SQLException ex){
                JOptionPane.showMessageDialog(this, "Kesalahan query"+ex);
            }
            int size=0;
            try {
                while (konek.rs.next()){
                    size++;
                    jenis.setText(konek.rs.getString("jenis"));
                    tglmasuk.setText(konek.rs.getString("tgl_masuk"));
                    jammasuk.setText(konek.rs.getString("jam_masuk"));
                    int hari = Integer.parseInt(konek.rs.getString("durasi_hari"));
                    int jam = Integer.parseInt(konek.rs.getString("durasi_jam"));
                    int biaya, biaya_akhir;
                    if(jenis.getText().equals("Mobil")){
                        biayaparkir.setText(rupiah.format(5000));
                        biaya = 5000;
                    } else {
                        biayaparkir.setText(rupiah.format(2000));
                        biaya = 2000;
                    }
                    if(hari>0){
                        durasihari.setText(""+hari+" hari");
                        durasijam.setText("-");
                        biaya_akhir = biaya + (50000*hari);
                        biayatotal.setText(rupiah.format(biaya_akhir));
                        lblbiaya.setText(""+biaya_akhir);
                    }
                    else{
                        durasihari.setText("0 hari");
                        durasijam.setText(konek.rs.getString("durasi_jam").toString()+" jam");
                        biaya_akhir = biaya + (1000*jam);
                        biayatotal.setText(rupiah.format(biaya_akhir));
                        biayatotal.setText(""+biaya_akhir);
                    }

                }
                if(size==0)
                {
                    JOptionPane.showMessageDialog(this,"Data tidak ditemukan");
                    return;
                }
                konek.rs.close();
                konek.st.close();
            } catch (SQLException ex){
            }
        }
    }//GEN-LAST:event_CARIActionPerformed

    private void KELUARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KELUARActionPerformed
        // TODO add your handling code here:
String no = txtNotiket.getText();
String nop = nopol.getText();
String jenis_ = jenis.getText();
String tgl_m   = tglmasuk.getText();
String jam_m = jammasuk.getText();
String durH = durasihari.getText();
String durjam = durasijam.getText();
String biayaP = biayaparkir.getText();
String total = biayatotal.getText();

{
try
{
Class.forName("com.mysql.jdbc.Driver").newInstance();
Connection koneksi = (Connection) DriverManager.getConnection("jdbc:mysql://127.0.0.1/parkir", "root", "");
Statement statement = (Statement) koneksi.createStatement();
String sql="insert into parkir_keluar values('"+no+"','"+nop+"','"+jenis_+"','"+tgl_m+"','"+jam_m+"',CURDATE(),CURTIME(),'"+durH+"','"+durjam+"','"+biayaP+"','"+total+"')";
koneksi.createStatement().executeUpdate("DELETE FROM parkir_masuk where no_pol='"+nopol.getText()+"'");
int executeUpdate = statement.executeUpdate(sql);
statement.close();
JOptionPane.showMessageDialog(null, "Data berhasil dimasukkan..","Insert Data",JOptionPane.INFORMATION_MESSAGE);



koneksi.close();
}
catch (     ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException | HeadlessException e)
{
JOptionPane.showMessageDialog(null, "Eror: "+e,"Gagal",JOptionPane.WARNING_MESSAGE);
//System.err.println("Exception: "+e.getMessage());
}
finally {
tampilkan_data();
}
    }        
    }//GEN-LAST:event_KELUARActionPerformed

    private void cetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetakActionPerformed
         // TODO add your handling code here:
          try {
            String NamaFile = "src/REPORT/NOTAPARKIR.jasper";
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            java.sql.Connection koneksi = DriverManager.getConnection("jdbc:mysql://localhost/parkir","root","");
            HashMap hash = new HashMap();
            File file = new File(NamaFile);
            //Mengambil parameter dari ireport
            hash.put("no_tiket", txtNotiket.getText());
            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(file.getPath());
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, hash, koneksi);
            JRViewer aViewer = new JRViewer(jasperPrint);
            JDialog viewer = new JDialog();
            viewer.setTitle(".: Jasper Report :.");
            //viewer.setAlwaysOnTop(true);
            viewer.getContentPane().add(aViewer);
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            viewer.setBounds(0,0,screenSize.width, screenSize.height);
            viewer.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Cetak "+e);
        }
    }//GEN-LAST:event_cetakActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
         // TODO add your handling code here:
        txtNotiket.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        nopol.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        jenis.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        tglmasuk.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        jammasuk.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        durasihari.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString());
        durasijam.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString());
        biayaparkir.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 9).toString());
        biayatotal.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 10).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
        // TODO add your handling code here:
        if(txtNotiket.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Pilih Data Terlebih Dahulu !");
        }
        else{
            int reply = JOptionPane.showConfirmDialog(this,"Hapus Data Parkir Keluar?","Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (reply == JOptionPane.YES_OPTION) {
                try {
                    java.sql.Connection koneksi = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost/parkir","root","");
                    koneksi.createStatement().executeUpdate("DELETE FROM parkir_keluar where no_tiket='"+txtNotiket.getText()+"'");
                    JOptionPane.showMessageDialog(this, "Data Dihapus !");
                    tampilkan_data();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Data Gagal Dihapus !");
                }

            }
        }
    }//GEN-LAST:event_DELETEActionPerformed

    private void CLOSEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLOSEActionPerformed
         // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_CLOSEActionPerformed

    private void CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEARActionPerformed
         // TODO add your handling code here:
txtNotiket.setText("");
nopol.setText("");
jenis.setText("");
tglmasuk.setText("");
jammasuk.setText("");
durasihari.setText("");
durasijam.setText("");
biayaparkir.setText("");
biayatotal.setText("");
penomoran_otomatis();
    }//GEN-LAST:event_CLEARActionPerformed

     private void koneksi() {
        try {
            Class.forName("com.mysql.jdbc.Driver") ;
            con = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost/parkir","root","");
            stt = (Statement) con.createStatement();
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Koneksi Database Error");
        }
    }
    
      private void tampilkan_data() {
        try {
            int data = jTable1.getRowCount();
            for(int i=0;i<data;i++){
            tabel.removeRow(0);
            }
            com.mysql.jdbc.Connection koneksi = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost/parkir","root","");
            ResultSet re=koneksi.createStatement().executeQuery("SELECT * FROM parkir_keluar ORDER BY no_tiket");            
            while(re.next()){                
                String[] tabel_master={re.getString(1),re.getString(2),re.getString(3),re.getString(4),re.getString(5),re.getString(6),re.getString(7),re.getString(8),re.getString(9),re.getString(10),re.getString(11)};
                tabel.addRow(tabel_master);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Terjadi Kesalahan Tampil Tabel");
        }
          
    }
    
       private void penomoran_otomatis() {
        int notiket=0;
        String temp_kode_tiket="";
        try {
            koneksi();
            String sql = "select no_tiket from parkir_keluar order by no_tiket desc limit 1";                        
            ResultSet res=stt.executeQuery(sql);
            while (res.next()) {
                temp_kode_tiket = res.getString(1);                
                String nomor_blkg = temp_kode_tiket.substring(3,5);
                notiket=Integer.parseInt(nomor_blkg);
            }
                        
            notiket++;
            String nilai=String.valueOf(notiket);                      
            if(nilai.length()==1){
                txtNotiket.setText("NT00"+notiket);
            }else
            if(nilai.length()==2){
                txtNotiket.setText("NT0"+notiket);
            }else
            if(nilai.length()==3){
                txtNotiket.setText("NT"+notiket);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Terjadi Error Penomoran !");
        }
    }
      
      private void aturKolom() {
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF); 
        column = jTable1.getColumnModel().getColumn(0);
        column.setPreferredWidth(125);        
        column = jTable1.getColumnModel().getColumn(1); 
        column.setPreferredWidth(125); 
        column = jTable1.getColumnModel().getColumn(2); 
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(3); 
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(4); 
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(5); 
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(6); 
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(7); 
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(8); 
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(9); 
        column.setPreferredWidth(125);
        column = jTable1.getColumnModel().getColumn(10); 
        column.setPreferredWidth(125);
      }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PARKIR_KELUAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PARKIR_KELUAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PARKIR_KELUAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PARKIR_KELUAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PARKIR_KELUAR dialog = new PARKIR_KELUAR(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CARI;
    private javax.swing.JButton CLEAR;
    private javax.swing.JButton CLOSE;
    private javax.swing.JButton DELETE;
    private javax.swing.JButton KELUAR;
    private javax.swing.JTextField biayaparkir;
    private javax.swing.JTextField biayatotal;
    private javax.swing.JButton cetak;
    private javax.swing.JTextField durasihari;
    private javax.swing.JTextField durasijam;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jammasuk;
    private javax.swing.JTextField jenis;
    private javax.swing.JLabel lblbiaya;
    private javax.swing.JTextField nopol;
    private javax.swing.JTextField tglmasuk;
    private javax.swing.JTextField txtNotiket;
    // End of variables declaration//GEN-END:variables
}
